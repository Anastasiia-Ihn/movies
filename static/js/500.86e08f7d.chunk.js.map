{"version":3,"file":"static/js/500.86e08f7d.chunk.js","mappings":"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","sources":["API/api.js","components/ListTrends/ListTrends.styled.js","components/ListTrends/ListTrends.jsx","components/SearchByMovie/SearchByMovie.styled.js","components/SearchByMovie/SearchByMovie.jsx","pages/Movies/Movies.jsx","utils/constants.js"],"sourcesContent":["import axios from 'axios';\n\nconst key = '84201912ed7e3ce22261b9e0387010b4';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  language: 'en-US',\n  api_key: key,\n};\n\n// =================================================================\n\nexport const fetchData = async () => {\n  const resp = await axios.get(`/trending/movie/day`);\n  return resp.data;\n};\n\n// ==================================================================\n\nexport const fetchDataById = async movieId => {\n  const resp = await axios.get(`/movie/${movieId}?`);\n  return resp.data;\n};\n\n// ==================================================================\n\nexport const fetchDataByIdForCast = async movieId => {\n  const resp = await axios.get(`/${movieId}/credits?`);\n  return resp.data.cast;\n};\n\n// ==================================================================\n\nexport const fetchDataByIdForReviews = async movieId => {\n  const resp = await axios.get(`/movie/${movieId}/reviews?`);\n  return resp.data.results;\n};\n\n// ==================================================================\n\nexport const fetchDataByValue = async valueInput => {\n  const resp = await axios.get(`/search/movie?query= ${valueInput}`);\n  return resp.data;\n};\n\n// ==================================================================\n","import styled from 'styled-components';\n\nexport const ListTrendsStyled = styled.ul`\n  color: ${p => p.theme.colors.active};\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 50px;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const ItemList = styled.li`\n  background-color: ${p => p.theme.colors.darkPurple};\n  border-radius: 5px;\n  box-shadow: 10px 11px 10px 2px rgba(34, 60, 80, 0.2);\n  overflow: hidden;\n  height: 418px;\n  :focus,\n  :hover {\n    cursor: pointer;\n  }\n  & img {\n    display: block;\n\n    width: 100%;\n  }\n  & h3 {\n    padding: 8px 12px;\n    line-height: 1.36;\n\n    text-align: center;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: wrap;\n    display: -webkit-box;\n    -webkit-line-clamp: 2;\n    -webkit-box-orient: vertical;\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { ItemList, ListTrendsStyled } from './ListTrends.styled';\n\nimport { BASE_POSTER_URL } from '../../utils/constants';\n\nconst defaultImg =\n  '<https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700>';\n\nexport const ListTrends = ({ list }) => {\n  const location = useLocation();\n\n  return (\n    <ListTrendsStyled>\n      {list.map(el => (\n        <ItemList key={el.id}>\n          <Link to={`/movies/${el.id}`} state={{ from: location }}>\n            {\n              <img\n                src={\n                  el.poster_path\n                    ? `${BASE_POSTER_URL}${el.poster_path}`\n                    : defaultImg\n                }\n                alt={el.original_title}\n                width={226}\n                height={339}\n              ></img>\n            }\n            <h3>{el.title}</h3>\n          </Link>\n        </ItemList>\n      ))}\n    </ListTrendsStyled>\n  );\n};\n","import styled from 'styled-components';\n\nexport const SearchInput = styled.input`\n  display: inline-block;\n  border-radius: 4px;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding: 10px 40px;\n\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const SearchBtn = styled.button`\n  border: 1px solid ${p => p.theme.colors.white};\n  border-radius: 4px;\n  box-shadow: rgba(0, 0, 0, 0.12) 0 1px 1px;\n  cursor: pointer;\n  display: block;\n  padding: 10px 10px;\n\n  line-height: 100%;\n  margin: 0;\n  outline: 0;\n  text-align: center;\n\n  margin-left: 24px;\n  width: 80px;\n  height: 43px;\n\n  :hover,\n  :focus {\n    box-shadow: rgba(255, 255, 255, 0.3) 0 0 2px inset,\n      rgba(0, 0, 0, 0.4) 0 1px 2px;\n    text-decoration: none;\n    transition-duration: 0.15s, 0.15s;\n    background-color: ${p => p.theme.colors.white};\n  }\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n","import { useState } from 'react';\nimport { SearchBtn, SearchInput, SearchForm } from './SearchByMovie.styled';\n\nexport const SearchByMovie = ({ onSubmit }) => {\n  const [value, setValue] = useState('');\n\n  const handlerClickOnFormSubmit = evt => {\n    evt.preventDefault();\n\n    if (evt.target.value?.trim() === '') {\n      return 'error';\n    }\n    onSubmit(value);\n    setValue('');\n  };\n\n  return (\n    <SearchForm onSubmit={handlerClickOnFormSubmit}>\n      <SearchInput\n        type=\"text\"\n        placeholder=\"Search movies\"\n        value={value}\n        onChange={e => setValue(e.target.value)}\n      />\n      <SearchBtn type=\"submit\">Search</SearchBtn>\n    </SearchForm>\n  );\n};\n","import { fetchDataByValue } from 'API/api';\nimport { ListTrends } from 'components/ListTrends/ListTrends';\nimport { SearchByMovie } from 'components/SearchByMovie/SearchByMovie';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nexport default function Movies() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [listMovies, setListMovies] = useState([]);\n\n  useEffect(() => {\n    const currentQuery = searchParams.get('query') ?? '';\n\n    if (currentQuery === '') {\n      return;\n    }\n\n    async function fetchData() {\n      try {\n        const { results } = await fetchDataByValue(currentQuery);\n\n        if (!results.length) {\n          toast.error('Sorry, not found');\n        }\n        setListMovies(results);\n      } catch (err) {\n        toast.error('Not found');\n        console.log(err.code);\n        // if (err.code !== 'ERR_CANCELED') {\n        //   setError(true);\n        //   toast.error('Not found');\n        // }\n      }\n    }\n    fetchData();\n  }, [searchParams]);\n\n  const handleSubmit = value => {\n    setSearchParams({ query: value });\n  };\n\n  return (\n    <>\n      <SearchByMovie onSubmit={handleSubmit} />\n      {listMovies.length > 0 && <ListTrends list={listMovies} />}\n    </>\n  );\n}\n","export const BASE_POSTER_URL = 'https://image.tmdb.org/t/p/w500/';\n"],"names":["axios","language","api_key","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","resp","_context","prev","next","sent","abrupt","data","stop","apply","arguments","fetchDataById","_ref2","_callee2","movieId","_context2","concat","_x","fetchDataByIdForCast","_ref3","_callee3","_context3","cast","_x2","fetchDataByIdForReviews","_ref4","_callee4","_context4","results","_x3","fetchDataByValue","_ref5","_callee5","valueInput","_context5","_x4","ListTrendsStyled","styled","_templateObject","_taggedTemplateLiteral","p","theme","colors","active","ItemList","_templateObject2","darkPurple","ListTrends","list","location","useLocation","_jsx","children","map","el","_jsxs","Link","to","id","state","from","src","poster_path","BASE_POSTER_URL","alt","original_title","width","height","title","SearchInput","SearchBtn","white","SearchForm","_templateObject3","SearchByMovie","onSubmit","_useState","useState","_useState2","_slicedToArray","value","setValue","evt","_evt$target$value","preventDefault","target","trim","type","placeholder","onChange","e","Movies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","listMovies","setListMovies","useEffect","_searchParams$get","currentQuery","get","_fetchData","_yield$fetchDataByVal","length","toast","t0","console","log","code","_Fragment","query"],"sourceRoot":""}