{"version":3,"file":"static/js/247.9ed0b1b9.chunk.js","mappings":"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","sources":["API/api.js","components/Cast/Cast.jsx","utils/constants.js"],"sourcesContent":["import axios from 'axios';\n\nconst key = '84201912ed7e3ce22261b9e0387010b4';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  language: 'en-US',\n  api_key: key,\n};\n\n// =================================================================\n\nexport const fetchData = async () => {\n  const resp = await axios.get(`/trending/movie/day`);\n  return resp.data;\n};\n\n// ==================================================================\n\nexport const fetchDataById = async movieId => {\n  const resp = await axios.get(`/movie/${movieId}?`);\n  return resp.data;\n};\n\n// ==================================================================\n\nexport const fetchDataByIdForCast = async movieId => {\n  const resp = await axios.get(`/${movieId}/credits?`);\n  return resp.data.cast;\n};\n\n// ==================================================================\n\nexport const fetchDataByIdForReviews = async movieId => {\n  const resp = await axios.get(`/movie/${movieId}/reviews?`);\n  return resp.data.results;\n};\n\n// ==================================================================\n\nexport const fetchDataByValue = async valueInput => {\n  const resp = await axios.get(`/search/movie?query= ${valueInput}`);\n  return resp.data;\n};\n\n// ==================================================================\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { fetchDataByIdForCast } from 'API/api';\nimport { BASE_POSTER_URL } from '../../utils/constants';\n\nexport default function Cast() {\n  const param = useParams();\n\n  const [movieCast, setMovieCast] = useState();\n\n  useEffect(() => {\n    async function getMobieByIdForCast() {\n      try {\n        const cast = await fetchDataByIdForCast(param.movieById);\n        setMovieCast(cast);\n      } catch (error) {\n        toast.error('Not found');\n      }\n    }\n\n    getMobieByIdForCast();\n  }, [param.movieById]);\n\n  return movieCast ? (\n    <ul>\n      {movieCast.map(el => (\n        <li key={el.id}>\n          {\n            <img\n              src={`${BASE_POSTER_URL}${el.profile_path}`}\n              alt={el.name}\n              width={200}\n            ></img>\n          }\n\n          <h3>{el.name}</h3>\n          <p>Character: {el.character}</p>\n        </li>\n      ))}\n    </ul>\n  ) : (\n    <p>Sorry, not found</p>\n  );\n}\n","export const BASE_POSTER_URL = 'https://image.tmdb.org/t/p/w500/';\n"],"names":["axios","language","api_key","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","resp","_context","prev","next","sent","abrupt","data","stop","apply","arguments","fetchDataById","_ref2","_callee2","movieId","_context2","concat","_x","fetchDataByIdForCast","_ref3","_callee3","_context3","cast","_x2","fetchDataByIdForReviews","_ref4","_callee4","_context4","results","_x3","fetchDataByValue","_ref5","_callee5","valueInput","_context5","_x4","Cast","param","useParams","_useState","useState","_useState2","_slicedToArray","movieCast","setMovieCast","useEffect","_getMobieByIdForCast","movieById","t0","toast","getMobieByIdForCast","_jsx","children","map","el","_jsxs","src","BASE_POSTER_URL","profile_path","alt","name","width","character","id"],"sourceRoot":""}